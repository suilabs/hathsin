type Section {
  id: ID!
  name: String!
}

type ProjectType {
  id: ID!
  name: String!
}

type Image {
  id: ID!
  name: String!
  url: String!
  filename: String!
}

type Configuration {
  componentId: String!
  propsJson: String!
}

type Project {
  id: ID!
  name: String!
  url: String!
  cover: Image!
  type: ProjectType!
  description: String
  section: Section!
  configuration: [Configuration]
  languages : [String]
}

type Query {
  projects: [Project]
  projectsByLanguage(lang: String): [Project]
  project(id: ID): Project

  images: [Image]
  image(id: ID): Image

  projectTypes: [ProjectType]
  projectType(id: ID): ProjectType

  sections: [Section]
  section(id: ID): Section
}


input ConfigurationInput {
  componentId: String!
  propsJson: String!
}

input ProjectInput {
  url: String!
  name: String!
  cover: String! # id of the image to use.
  type: String! # id of the section to use.
  description: String
  section: String! #id of the section to use.
  configuration: [ConfigurationInput]
  languages: [String]
}

input UpdateProjectInput {
  url: String
  name: String
  cover: String # id of the image to use.
  type: String # id of the section to use.
  description: String
  section: String #id of the section to use.
  configuration: [ConfigurationInput]
  languages: [String]
}

type Mutation {
  insertProject(project: ProjectInput): Project
  updateProject(id: String!, project: UpdateProjectInput): Project
  deleteProjects(ids: [String]!): [Project]

  insertImage(name: String!, url: String!, filename: String!): Image
  updateImage(id: String!, name: String!, url: String!, filename: String!): Image
  deleteImages(ids: [String]!): [Image]

  insertProjectType(name: String!): ProjectType
  updateProjectType(id: String!, name: String!): ProjectType
  deleteProjectTypes(ids: [String]!): [ProjectType]

  insertSection(name: String!): Section
  updateSection(id: String!, name: String!): Section
  deleteSections(ids: [String]!): [Section]
}
